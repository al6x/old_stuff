require 'rake'
require 'spec/rake/spectask'

# Run
task :activate do
	
	$LOAD_PATH << File.expand_path("lib")
	
	require 'ActivePoint/require'
	config = {
		:directory => "/home/alex/Temp/data",
		:port => 8080,
		:initialize => lambda{},
		:default_object => 'Portal',
		:initialize_core => lambda{
			portal = Portal::Core::Model::Portal.new "Portal", "Portal"
			portal.core = ActivePoint::Plugins::Core::Model::Core.new "Core", "Core"		
		},
		:plugins => [
		Portal::Core,
		Portal::Blog,
		Portal::Site,
		],
		:services => [
		Portal::Services::ContactUs
		],
		:disable_security => true,
		:cache => (false ? "ObjectModel::Tools::NoCache" : "ObjectModel::Tools::InMemoryCache"),
		:default_language => :en,
		#		:reset_data => true
	}
	ActivePoint::Engine.activate config
end

task :run => :activate do
	ActivePoint::Engine.join
end

task :reset => :activate do
	ActivePoint::Engine.reset_data!
end

task :sample_data => :activate do
	Portal::Site::Samples::SampleData.install
end

# Spec
task :default => :spec

Spec::Rake::SpecTask.new('spec') do |t|
	t.spec_files = FileList["spec/**/*_spec.rb"]
	t.libs = ["lib", "spec", "#{File.expand_path "./.."}"]
end

# Gem
require 'rake/clean'
require 'rake/gempackagetask'
require 'fileutils'

spec = Gem::Specification.new do |s|
	s.name = "Portal"
	s.version = "0.1.0"
	s.summary = "Portal is a set of components for building general community platform (CMS, Blog, Forum, DMS, light PBM, ...)"
	s.description = "Portal is a set of components for building general community platform (CMS, Blog, Forum, DMS, light PBM, ...)"
	s.author = "Alexey Petrushin"
	#	s.email = ""
	s.homepage = "http://www.bos-tec.com"
	s.rubyforge_project = "Portal"
	
	s.platform = Gem::Platform::RUBY
	s.has_rdoc = true
	s.extra_rdoc_files = ["README"]
	
	s.files = (%w{rakefile README} + Dir.glob("{data,lib,spec}/**/*"))\
	.select{|f| f !~ /^\./}
	#	s.executables = ['restclient']
	
	s.add_dependency "ActivePoint"
	
	s.require_path = "lib"
end

Rake::GemPackageTask.new(spec) do |p|
	package_dir = "#{File.expand_path File.dirname(__FILE__)}/../build"
	#	FileUtils.mkdir package_dir unless File.exist? package_dir	
	p.need_tar = true if RUBY_PLATFORM !~ /mswin/
	p.need_zip = true
	p.package_dir = package_dir
end

CLEAN.include [ 'pkg', '*.gem']

task :release => [:gem, :clean]
